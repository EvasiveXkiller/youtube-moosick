{"version":3,"file":"compiler.js","sources":["../../../../../node_modules/object-scan/lib/core/compiler.js"],"sourcesContent":["\"use strict\";\n\n/* compile needles to hierarchical map object */\nconst parser = require('./parser');\n\nconst iterator = require('../generic/iterator');\n\nconst traverser = require('../generic/traverser');\n\nconst {\n  defineProperty\n} = require('../generic/helper');\n\nconst {\n  Wildcard\n} = require('./wildcard');\n\nconst COUNTER = Symbol('counter');\nconst LEAF = Symbol('leaf');\n\nconst markLeaf = (input, match, readonly) => defineProperty(input, LEAF, match, readonly);\n\nconst isLeaf = input => LEAF in input;\n\nconst isMatch = input => input !== undefined && input[LEAF] === true;\n\nmodule.exports.isLeaf = isLeaf;\nmodule.exports.isMatch = isMatch;\nconst HAS_MATCHES = Symbol('has-matches');\n\nconst setHasMatches = input => defineProperty(input, HAS_MATCHES, true);\n\nconst hasMatches = input => input[HAS_MATCHES] === true;\n\nmodule.exports.hasMatches = hasMatches;\n\nconst merge = (input, symbol, value) => {\n  if (input[symbol] === undefined) {\n    defineProperty(input, symbol, []);\n  }\n\n  if (!input[symbol].includes(value)) {\n    input[symbol].push(value);\n  }\n};\n\nconst LEAF_NEEDLES = Symbol('leaf-needles');\n\nconst addLeafNeedle = (input, needle) => merge(input, LEAF_NEEDLES, needle);\n\nconst getLeafNeedles = input => input[LEAF_NEEDLES] || [];\n\nmodule.exports.getLeafNeedles = getLeafNeedles;\nconst LEAF_NEEDLES_EXCLUDE = Symbol('leaf-needles-exclude');\n\nconst addLeafNeedleExclude = (input, needle) => merge(input, LEAF_NEEDLES_EXCLUDE, needle);\n\nconst getLeafNeedlesExclude = input => input[LEAF_NEEDLES_EXCLUDE] || [];\n\nmodule.exports.getLeafNeedlesExclude = getLeafNeedlesExclude;\nconst LEAF_NEEDLES_MATCH = Symbol('leaf-needles-match');\n\nconst addLeafNeedleMatch = (input, needle) => merge(input, LEAF_NEEDLES_MATCH, needle);\n\nconst getLeafNeedlesMatch = input => input[LEAF_NEEDLES_MATCH] || [];\n\nmodule.exports.getLeafNeedlesMatch = getLeafNeedlesMatch;\nconst NEEDLES = Symbol('needles');\n\nconst addNeedle = (input, needle) => merge(input, NEEDLES, needle);\n\nconst getNeedles = input => input[NEEDLES];\n\nmodule.exports.getNeedles = getNeedles;\nconst INDEX = Symbol('index');\n\nconst setIndex = (input, index, readonly) => defineProperty(input, INDEX, index, readonly);\n\nconst getIndex = input => input[INDEX];\n\nmodule.exports.getIndex = getIndex;\nconst ORDER = Symbol('order');\n\nconst setOrder = (input, order) => defineProperty(input, ORDER, order);\n\nconst getOrder = input => input[ORDER];\n\nmodule.exports.getOrder = getOrder;\nconst WILDCARD = Symbol('wildcard');\n\nconst setWildcard = (input, wildcard) => defineProperty(input, WILDCARD, wildcard);\n\nconst getWildcard = input => input[WILDCARD];\n\nmodule.exports.getWildcard = getWildcard;\nconst VALUES = Symbol('values');\n\nconst setValues = (input, entries) => defineProperty(input, VALUES, entries);\n\nconst getValues = input => input[VALUES];\n\nmodule.exports.getValues = getValues;\n\nmodule.exports.matchedBy = searches => Array.from(new Set([].concat(...searches.map(e => getLeafNeedlesMatch(e)))));\n\nmodule.exports.excludedBy = searches => Array.from(new Set([].concat(...searches.map(e => getLeafNeedlesExclude(e)))));\n\nmodule.exports.traversedBy = searches => Array.from(new Set([].concat(...searches.map(e => getNeedles(e)))));\n\nmodule.exports.isLastLeafMatch = searches => {\n  let maxLeafIndex = Number.MIN_SAFE_INTEGER;\n  let maxLeaf = null;\n\n  for (let idx = 0, len = searches.length; idx < len; idx += 1) {\n    const s = searches[idx];\n    const index = getIndex(s);\n\n    if (index !== undefined && index > maxLeafIndex) {\n      maxLeafIndex = index;\n      maxLeaf = s;\n    }\n  }\n\n  return maxLeaf !== null && isMatch(maxLeaf);\n};\n\nconst iterate = (tower, needle, tree, {\n  onAdd,\n  onFin\n}) => {\n  const stack = [[[tower, null]]];\n  const wildcards = [];\n  let excluded = false;\n  iterator.iterate(tree, (type, wc) => {\n    if (type === 'RM') {\n      if (wc.excluded === true) {\n        excluded = false;\n      }\n\n      stack.pop();\n      wildcards.pop();\n    } else if (type === 'ADD') {\n      if (wc.excluded === true) {\n        if (excluded) {\n          throw new Error(`Redundant Exclusion: \"${needle}\"`);\n        }\n\n        excluded = true;\n      }\n\n      const toAdd = [];\n      const wcParent = wildcards[wildcards.length - 1];\n      stack[stack.length - 1].forEach(([cur]) => onAdd(cur, wc, wcParent, e => toAdd.push([e, cur])));\n      stack.push(toAdd);\n      wildcards.push(wc);\n    } else {\n      stack[stack.length - 1].filter(([cur]) => cur !== tower).forEach(([cur, parent]) => onFin(cur, wc[wc.length - 1], parent, excluded));\n    }\n  });\n};\n\nconst applyNeedle = (tower, needle, tree, ctx) => {\n  iterate(tower, needle, tree, {\n    onAdd: (cur, wc, wcParent, next) => {\n      addNeedle(cur, needle);\n      const redundantRecursion = wcParent !== undefined && wc.isStarRec && wc.value === wcParent.value;\n\n      if (redundantRecursion && ctx.strict) {\n        throw new Error(`Redundant Recursion: \"${needle}\"`);\n      }\n\n      if (!redundantRecursion) {\n        if (!(wc.value in cur)) {\n          const child = {}; // eslint-disable-next-line no-param-reassign\n\n          cur[wc.value] = child;\n\n          if (ctx.orderByNeedles) {\n            setOrder(child, ctx[COUNTER]);\n          }\n\n          setWildcard(child, wc);\n        }\n\n        next(cur[wc.value]);\n      }\n\n      if (wc.isStarRec) {\n        next(cur);\n      }\n    },\n    onFin: (cur, wc, parent, excluded) => {\n      if (ctx.strict) {\n        if (wc.isSimpleStarRec) {\n          const unnecessary = Object.keys(parent).filter(k => !['**', ''].includes(k));\n\n          if (unnecessary.length !== 0) {\n            throw new Error(`Needle Target Invalidated: \"${parent[unnecessary[0]][NEEDLES][0]}\" by \"${needle}\"`);\n          }\n        }\n      }\n\n      addNeedle(cur, needle);\n\n      if (ctx.strict && LEAF_NEEDLES in cur) {\n        throw new Error(`Redundant Needle Target: \"${cur[LEAF_NEEDLES][0]}\" vs \"${needle}\"`);\n      }\n\n      addLeafNeedle(cur, needle, ctx.strict);\n\n      if (excluded) {\n        addLeafNeedleExclude(cur, needle);\n      } else {\n        addLeafNeedleMatch(cur, needle);\n      }\n\n      markLeaf(cur, !excluded, ctx.strict);\n      setIndex(cur, ctx[COUNTER], ctx.strict);\n      ctx[COUNTER] += 1;\n    }\n  });\n};\n\nconst finalizeTower = tower => {\n  const matches = [];\n  let lastDepth = -1;\n  traverser.traverse(tower, (type, obj, depth) => {\n    if (type === 'EXIT') {\n      const isUp = lastDepth === depth + 1;\n\n      if (isUp && matches[lastDepth] === true || isMatch(obj)) {\n        matches[depth] = true;\n        setHasMatches(obj);\n      }\n\n      if (isUp) {\n        matches[lastDepth] = false;\n      }\n\n      setValues(obj, Object.values(obj).reverse());\n      lastDepth = depth;\n    }\n  });\n};\n\nmodule.exports.compile = (needles, ctx) => {\n  const tower = {};\n  ctx[COUNTER] = 0;\n\n  for (let idx = 0; idx < needles.length; idx += 1) {\n    const needle = needles[idx];\n    const tree = [parser.parse(needle, ctx)];\n    applyNeedle(tower, needle, tree, ctx);\n  }\n\n  setWildcard(tower, new Wildcard('*', false));\n  finalizeTower(tower);\n  return tower;\n};"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4"],"mappings":"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"}