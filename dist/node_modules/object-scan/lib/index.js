import require$$0 from 'assert';
import './core/compiler.js';
import find$1 from './core/find.js';
import context from './core/context.js';
import { __exports as compiler$1 } from '../../../_virtual/compiler.js_commonjs-exports';

const assert = require$$0;

const compiler = compiler$1;

const find = find$1;

const Context = context;

var lib = (needles, opts = {}) => {
  assert(Array.isArray(needles));
  assert(opts instanceof Object && !Array.isArray(opts));

  if (needles.length === 0) {
    return (_, ctx) => ctx === undefined ? [] : ctx;
  }

  const ctx = Context(opts);
  const search = compiler.compile(needles, ctx); // keep separate for performance

  return (haystack, context) => find(haystack, [search], {
    context,
    ...ctx,
    rtn: ctx.rtn || (context === undefined ? 'key' : 'context')
  });
};

export { lib as default };
//# sourceMappingURL=index.js.map
