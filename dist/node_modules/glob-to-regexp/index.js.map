{"version":3,"file":"index.js","sources":["../../../node_modules/glob-to-regexp/index.js"],"sourcesContent":["module.exports = function (glob, opts) {\n  if (typeof glob !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var str = String(glob);\n\n  // The regexp we are building, as a string.\n  var reStr = \"\";\n\n  // Whether we are matching so called \"extended\" globs (like bash) and should\n  // support single character matching, matching ranges of characters, group\n  // matching, etc.\n  var extended = opts ? !!opts.extended : false;\n\n  // When globstar is _false_ (default), '/foo/*' is translated a regexp like\n  // '^\\/foo\\/.*$' which will match any string beginning with '/foo/'\n  // When globstar is _true_, '/foo/*' is translated to regexp like\n  // '^\\/foo\\/[^/]*$' which will match any string beginning with '/foo/' BUT\n  // which does not have a '/' to the right of it.\n  // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but\n  // these will not '/foo/bar/baz', '/foo/bar/baz.txt'\n  // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when\n  // globstar is _false_\n  var globstar = opts ? !!opts.globstar : false;\n\n  // If we are doing extended matching, this boolean is true when we are inside\n  // a group (eg {*.html,*.js}), and false otherwise.\n  var inGroup = false;\n\n  // RegExp flags (eg \"i\" ) to pass in to RegExp constructor.\n  var flags = opts && typeof( opts.flags ) === \"string\" ? opts.flags : \"\";\n\n  var c;\n  for (var i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n\n    switch (c) {\n    case \"/\":\n    case \"$\":\n    case \"^\":\n    case \"+\":\n    case \".\":\n    case \"(\":\n    case \")\":\n    case \"=\":\n    case \"!\":\n    case \"|\":\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"?\":\n      if (extended) {\n        reStr += \".\";\n\t    break;\n      }\n\n    case \"[\":\n    case \"]\":\n      if (extended) {\n        reStr += c;\n\t    break;\n      }\n\n    case \"{\":\n      if (extended) {\n        inGroup = true;\n\t    reStr += \"(\";\n\t    break;\n      }\n\n    case \"}\":\n      if (extended) {\n        inGroup = false;\n\t    reStr += \")\";\n\t    break;\n      }\n\n    case \",\":\n      if (inGroup) {\n        reStr += \"|\";\n\t    break;\n      }\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"*\":\n      // Move over all consecutive \"*\"'s.\n      // Also store the previous and next characters\n      var prevChar = str[i - 1];\n      var starCount = 1;\n      while(str[i + 1] === \"*\") {\n        starCount++;\n        i++;\n      }\n      var nextChar = str[i + 1];\n\n      if (!globstar) {\n        // globstar is disabled, so treat any number of \"*\" as one\n        reStr += \".*\";\n      } else {\n        // globstar is enabled, so determine if this is a globstar segment\n        var isGlobstar = starCount > 1                      // multiple \"*\"'s\n          && (prevChar === \"/\" || prevChar === undefined)   // from the start of the segment\n          && (nextChar === \"/\" || nextChar === undefined)   // to the end of the segment\n\n        if (isGlobstar) {\n          // it's a globstar, so match zero or more path segments\n          reStr += \"((?:[^/]*(?:\\/|$))*)\";\n          i++; // move over the \"/\"\n        } else {\n          // it's not a globstar, so only match one path segment\n          reStr += \"([^/]*)\";\n        }\n      }\n      break;\n\n    default:\n      reStr += c;\n    }\n  }\n\n  // When regexp 'g' flag is specified don't\n  // constrain the regular expression with ^ & $\n  if (!flags || !~flags.indexOf('g')) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n\n  return new RegExp(reStr, flags);\n};\n"],"names":[],"mappings":"IAAA,YAAc,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AACvC,EAAE,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAChC,IAAI,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;AAC7C,GAAG;AACH;AACA,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB;AACA;AACA,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACjB;AACA;AACA;AACA;AACA,EAAE,IAAI,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAChD;AACA;AACA;AACA,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC;AACtB;AACA;AACA,EAAE,IAAI,KAAK,GAAG,IAAI,IAAI,QAAQ,IAAI,CAAC,KAAK,EAAE,KAAK,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAC1E;AACA,EAAE,IAAI,CAAC,CAAC;AACR,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACf;AACA,IAAI,QAAQ,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG;AACZ,MAAM,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC;AACxB,MAAM,MAAM;AACZ;AACA,IAAI,KAAK,GAAG;AACZ,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,KAAK,IAAI,GAAG,CAAC;AACrB,KAAK,MAAM;AACX,OAAO;AACP;AACA,IAAI,KAAK,GAAG,CAAC;AACb,IAAI,KAAK,GAAG;AACZ,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,KAAK,IAAI,CAAC,CAAC;AACnB,KAAK,MAAM;AACX,OAAO;AACP;AACA,IAAI,KAAK,GAAG;AACZ,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,OAAO,GAAG,IAAI,CAAC;AACvB,KAAK,KAAK,IAAI,GAAG,CAAC;AAClB,KAAK,MAAM;AACX,OAAO;AACP;AACA,IAAI,KAAK,GAAG;AACZ,MAAM,IAAI,QAAQ,EAAE;AACpB,QAAQ,OAAO,GAAG,KAAK,CAAC;AACxB,KAAK,KAAK,IAAI,GAAG,CAAC;AAClB,KAAK,MAAM;AACX,OAAO;AACP;AACA,IAAI,KAAK,GAAG;AACZ,MAAM,IAAI,OAAO,EAAE;AACnB,QAAQ,KAAK,IAAI,GAAG,CAAC;AACrB,KAAK,MAAM;AACX,OAAO;AACP,MAAM,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC;AACxB,MAAM,MAAM;AACZ;AACA,IAAI,KAAK,GAAG;AACZ;AACA;AACA,MAAM,IAAI,QAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,SAAS,GAAG,CAAC,CAAC;AACxB,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,QAAQ,SAAS,EAAE,CAAC;AACpB,QAAQ,CAAC,EAAE,CAAC;AACZ,OAAO;AACP,MAAM,IAAI,QAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC;AACA,MAAM,IAAI,CAAC,QAAQ,EAAE;AACrB;AACA,QAAQ,KAAK,IAAI,IAAI,CAAC;AACtB,OAAO,MAAM;AACb;AACA,QAAQ,IAAI,UAAU,GAAG,SAAS,GAAG,CAAC;AACtC,cAAc,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,SAAS,CAAC;AACzD,cAAc,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,SAAS,EAAC;AACzD;AACA,QAAQ,IAAI,UAAU,EAAE;AACxB;AACA,UAAU,KAAK,IAAI,sBAAsB,CAAC;AAC1C,UAAU,CAAC,EAAE,CAAC;AACd,SAAS,MAAM;AACf;AACA,UAAU,KAAK,IAAI,SAAS,CAAC;AAC7B,SAAS;AACT,OAAO;AACP,MAAM,MAAM;AACZ;AACA,IAAI;AACJ,MAAM,KAAK,IAAI,CAAC,CAAC;AACjB,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACtC,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAClC;;;;"}