{"version":3,"file":"for-each.js","sources":["../../../../../../node_modules/@jsdevtools/readdir-enhanced/lib/sync/for-each.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.syncForEach = void 0;\n/**\n * A facade that allows `Array.forEach()` to be called as though it were asynchronous.\n *\n * @param array - The array to iterate over\n * @param iterator - The function to call for each item in the array\n * @param done - The function to call when all iterators have completed\n *\n * @internal\n */\nfunction syncForEach(array, iterator, done) {\n    if (!Array.isArray(array)) {\n        throw new TypeError(`${array} is not an array`);\n    }\n    for (let item of array) {\n        iterator(item, () => {\n            // Note: No error-handling here because this is currently only ever called\n            // by DirectoryReader, which never passes an `error` parameter to the callback.\n            // Instead, DirectoryReader emits an \"error\" event if an error occurs.\n        });\n    }\n    done();\n}\nexports.syncForEach = syncForEach;\n//# sourceMappingURL=for-each.js.map"],"names":[],"mappings":";;;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;mBAC3C,GAAG,KAAK,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC/B,QAAQ,MAAM,IAAI,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACxD,KAAK;AACL,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,QAAQ,CAAC,IAAI,EAAE,MAAM;AAC7B;AACA;AACA;AACA,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,IAAI,EAAE,CAAC;AACX,CAAC;mBACkB,GAAG,WAAW"}