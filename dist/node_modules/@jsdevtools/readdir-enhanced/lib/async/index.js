import { __exports as async } from '../../../../../_virtual/index5.js_commonjs-exports';
export { __exports as default } from '../../../../../_virtual/index5.js_commonjs-exports';
import require$$0 from 'fs';
import '../directory-reader.js';
import './for-each.js';
import { __exports as forEach } from '../../../../../_virtual/for-each.js_commonjs-exports';
import { __exports as directoryReader } from '../../../../../_virtual/directory-reader.js_commonjs-exports';

Object.defineProperty(async, "__esModule", { value: true });
async.readdirAsync = void 0;
const fs = require$$0;
const directory_reader_1 = directoryReader;
const for_each_1 = forEach;
const asyncFacade = { fs, forEach: for_each_1.asyncForEach };
function readdirAsync(dir, options, callback) {
    if (typeof options === "function") {
        callback = options;
        options = undefined;
    }
    let promise = new Promise((resolve, reject) => {
        let results = [];
        let reader = new directory_reader_1.DirectoryReader(dir, options, asyncFacade);
        let stream = reader.stream;
        stream.on("error", (err) => {
            reject(err);
            stream.pause();
        });
        stream.on("data", (result) => {
            results.push(result);
        });
        stream.on("end", () => {
            resolve(results);
        });
    });
    if (callback) {
        promise.then((results) => callback(null, results), (err) => callback(err, undefined));
    }
    else {
        return promise;
    }
}
async.readdirAsync = readdirAsync;
//# sourceMappingURL=index.js.map
