{"version":3,"file":"for-each.js","sources":["../../../../../../node_modules/@jsdevtools/readdir-enhanced/lib/async/for-each.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncForEach = void 0;\n/**\n * Simultaneously processes all items in the given array.\n *\n * @param array - The array to iterate over\n * @param iterator - The function to call for each item in the array\n * @param done - The function to call when all iterators have completed\n *\n * @internal\n */\nfunction asyncForEach(array, iterator, done) {\n    if (!Array.isArray(array)) {\n        throw new TypeError(`${array} is not an array`);\n    }\n    if (array.length === 0) {\n        // NOTE: Normally a bad idea to mix sync and async, but it's safe here because\n        // of the way that this method is currently used by DirectoryReader.\n        done();\n        return;\n    }\n    // Simultaneously process all items in the array.\n    let pending = array.length;\n    for (let item of array) {\n        iterator(item, callback);\n    }\n    function callback() {\n        if (--pending === 0) {\n            done();\n        }\n    }\n}\nexports.asyncForEach = asyncForEach;\n//# sourceMappingURL=for-each.js.map"],"names":[],"mappings":";;;AACA,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC1C,GAAG,KAAK,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC7C,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC/B,QAAQ,MAAM,IAAI,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACxD,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B;AACA;AACA,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO;AACf,KAAK;AACL;AACA,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;AAC/B,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjC,KAAK;AACL,IAAI,SAAS,QAAQ,GAAG;AACxB,QAAQ,IAAI,EAAE,OAAO,KAAK,CAAC,EAAE;AAC7B,YAAY,IAAI,EAAE,CAAC;AACnB,SAAS;AACT,KAAK;AACL,CAAC;oBACmB,GAAG,YAAY"}